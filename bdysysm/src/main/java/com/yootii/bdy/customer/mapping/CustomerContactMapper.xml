<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yootii.bdy.customer.dao.CustomerContactMapper" >
  <resultMap id="BaseResultMap" type="com.yootii.bdy.customer.model.CustomerContact" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="tel" property="tel" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="postcode" property="postcode" jdbcType="VARCHAR" />
    <result column="custId" property="custId" jdbcType="INTEGER" />
  </resultMap>
  
  
  <sql id="Base_Column_List" >
    id, name, address, tel, email, postcode, custId
  </sql>
  <sql id="Base_Column_List_c" >
    c.id, c.name, c.address, c.tel, c.email, c.postcode, c.custId
  </sql>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from customer_contact
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from customer_contact
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <insert id="insert" parameterType="com.yootii.bdy.customer.model.CustomerContact" >
    insert into customer_contact (id, name, address, 
      tel, email, postcode, 
      custId)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{tel,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{postcode,jdbcType=VARCHAR}, 
      #{custId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.yootii.bdy.customer.model.CustomerContact" useGeneratedKeys="true" keyProperty="id">
    insert into customer_contact
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="tel != null" >
        tel,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="postcode != null" >
        postcode,
      </if>
      <if test="custId != null" >
        custId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="tel != null" >
        #{tel,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="postcode != null" >
        #{postcode,jdbcType=VARCHAR},
      </if>
      <if test="custId != null" >
        #{custId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yootii.bdy.customer.model.CustomerContact" >
    update customer_contact
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="tel != null" >
        tel = #{tel,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="postcode != null" >
        postcode = #{postcode,jdbcType=VARCHAR},
      </if>
      <if test="custId != null" >
        custId = #{custId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yootii.bdy.customer.model.CustomerContact" >
    update customer_contact
    set name = #{name,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      tel = #{tel,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      postcode = #{postcode,jdbcType=VARCHAR},
      custId = #{custId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByCustomerContact" resultMap="BaseResultMap">
  	select <include refid="Base_Column_List_c"/> from customer_contact as c
  	where 1=1 
  	
  	<choose>
			<when test="gcon.keyword!=null and gcon.keyword!=''">
				<bind name="gcon.keyword" value="'%' + gcon.keyword + '%'" />
				and (
				c.name like #{gcon.keyword,jdbcType=VARCHAR} or
				c.address like #{gcon.keyword,jdbcType=VARCHAR} or
				c.email like #{gcon.keyword,jdbcType=VARCHAR} or
				c.tel like #{gcon.keyword,jdbcType=VARCHAR} or
				c.postcode like #{gcon.keyword,jdbcType=VARCHAR})
			</when>
			<otherwise>
				<if test="customerContact.name!=null and customerContact.name!=''">
					<bind name="customerContact.name" value="'%' + customerContact.name + '%'" />
					and c.name like #{customerContact.name,jdbcType=VARCHAR}
				</if>
				<if test="customerContact.address!=null and customerContact.address!=''">
					<bind name="customerContact.address" value="'%'+customerContact.address+'%'" />
					and c.address like #{customerContact.address,jdbcType=VARCHAR}
				</if>
				<if test="customerContact.email!=null and customerContact.email!=''">
					<bind name="customerContact.email" value="'%'+customerContact.email+'%'" />
					and c.email = #{customerContact.email,jdbcType=VARCHAR}
				</if>
				<if test="customerContact.tel!=null and customerContact.tel!=''">
					<bind name="customerContact.tel" value="'%'+customerContact.tel+'%'" />
					and c.tel = #{customer.phone,jdbcType=VARCHAR}
				</if>
				<if test="customerContact.postcode!=null and customerContact.postcode!=''">
					<bind name="customerContact.postcode" value="customerContact.postcode" />
					and c.postcode = #{customerContact.postcode,jdbcType=VARCHAR}
				</if>
			</otherwise>
		</choose>
		<if test="customerContact.custId!=null and customerContact.custId!=''">
					<bind name="customerContact.custId" value="customerContact.custId" />
					and c.custId = #{customerContact.custId,jdbcType=INTEGER}
		</if>
		<bind name="gcon.offset" value="gcon.offset" />
		<bind name="gcon.rows" value="gcon.rows" />
		limit #{gcon.offset,jdbcType=INTEGER}, #{gcon.rows,jdbcType=INTEGER}
  </select>
  <select id="selectCountByCustomerContact" resultType="java.lang.Long">
  select count(c.id) from customer_contact as c
  	where 1=1 
  	
  	<choose>
			<when test="gcon.keyword!=null and gcon.keyword!=''">
				<bind name="gcon.keyword" value="'%' + gcon.keyword + '%'" />
				and (
				c.name like #{gcon.keyword,jdbcType=VARCHAR} or
				c.address like #{gcon.keyword,jdbcType=VARCHAR} or
				c.email like #{gcon.keyword,jdbcType=VARCHAR} or
				c.tel like #{gcon.keyword,jdbcType=VARCHAR} or
				c.postcode like #{gcon.keyword,jdbcType=VARCHAR})
			</when>
			<otherwise>
				<if test="customerContact.name!=null and customerContact.name!=''">
					<bind name="customerContact.name" value="'%' + customerContact.name + '%'" />
					and c.name like #{customerContact.name,jdbcType=VARCHAR}
				</if>
				<if test="customerContact.address!=null and customerContact.address!=''">
					<bind name="customerContact.address" value="'%'+customerContact.address+'%'" />
					and c.address like #{customerContact.address,jdbcType=VARCHAR}
				</if>
				<if test="customerContact.email!=null and customerContact.email!=''">
					<bind name="customerContact.email" value="'%'+customerContact.email+'%'" />
					and c.email = #{customerContact.email,jdbcType=VARCHAR}
				</if>
				<if test="customerContact.tel!=null and customerContact.tel!=''">
					<bind name="customerContact.tel" value="'%'+customerContact.tel+'%'" />
					and c.tel = #{customer.phone,jdbcType=VARCHAR}
				</if>
				<if test="customerContact.postcode!=null and customerContact.postcode!=''">
					<bind name="customerContact.postcode" value="customerContact.postcode" />
					and c.postcode = #{customerContact.postcode,jdbcType=VARCHAR}
				</if>
			</otherwise>
		</choose>
		<if test="customerContact.custId!=null and customerContact.custId!=''">
					<bind name="customerContact.custId" value="customerContact.custId" />
					and c.custId = #{customerContact.custId,jdbcType=INTEGER}
		</if>
  </select>
  
</mapper>